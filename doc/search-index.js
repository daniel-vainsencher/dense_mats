var searchIndex = {};
searchIndex['dense_mats'] = {"items":[[0,"","dense_mats","This crate contains traits to abstract over dense matrices.",null,null],[4,"StorageOrder","","Describe the storage order of a matrix.",null,null],[13,"ColMaj","","Column major storage",0,null],[13,"RowMaj","","Row major storage",0,null],[8,"DenseMatView","","Represents a view into a dense matrix",null,null],[10,"rows","","The number of rows of the matrix",1,{"inputs":[{"name":"densematview"}],"output":{"name":"usize"}}],[10,"cols","","The number of cols of the matrix",1,{"inputs":[{"name":"densematview"}],"output":{"name":"usize"}}],[11,"shape","","The number of rows and cols of the matrix",1,null],[10,"strides","","The strides of the matrix.",1,null],[11,"ordering","","Storage order. Specifies which dimension is stored the most contiguously\nin memory",1,{"inputs":[{"name":"densematview"}],"output":{"name":"storageorder"}}],[10,"data","","Access to the matrix's data",1,null],[10,"data_mut","","Mutable access to the matrix's data",1,null],[11,"data_index","","Give the index into self.data() for accessing the element\nat row i and column j",1,{"inputs":[{"name":"densematview"},{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[8,"DenseMatOwned","","Represents a dense matrix we own",null,null],[10,"into_data","","Get the underlying data array as a vector",2,{"inputs":[{"name":"densematowned"}],"output":{"name":"vec"}}]],"paths":[[4,"StorageOrder"],[8,"DenseMatView"],[8,"DenseMatOwned"]]};
initSearch(searchIndex);
